apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
def keystorePropertiesFile =file("keystore.properties")//用于加载 keystore.properties 文件
def keystoreProperties = new Properties()// Initialize a new Properties() object called keystoreProperties.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.sxzhwts.ticket"
        minSdkVersion 17
        targetSdkVersion 23
        versionCode 2
        versionName "2.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "ca43cf91e298e2d43e8294b4", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }
    sourceSets{
        main{
            jniLibs.srcDirs=['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //dagger2 和 butterknife冲突
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.buildType.name.equals('release')) {
                def formatedDate = new Date().format("yyyyMMddHHmm")
                def fileName = "ticket_release_${defaultConfig.versionName}_${formatedDate}.apk"
                outputFileName = fileName
            }
        }

}

buildscript {
        repositories {
            jcenter()
        }
    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile 'com.android.support:design:26.1.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'com.trello.rxlifecycle2:rxlifecycle:2.1.0'
    compile 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'org.greenrobot:eventbus:3.0.0'
    compile 'com.google.dagger:dagger:2.7'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.7'
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'
    compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.3'
    //没有使用特殊Header，可以不加这行
    compile 'com.airbnb.android:lottie:2.1.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    // compile 'org.xutils:xutils:3.3.36'
    // implementation 'cn.bingoogolapple:bga-qrcode-zxing:1.2.1'
    implementation 'cn.bingoogolapple:bga-qrcode-zbar:1.2.1'
    /*   compile 'cn.jiguang.sdk:jpush:3.1.2'
                compile 'cn.jiguang.sdk:jcore:1.2.0'*/

    implementation files('libs/jcore-android-1.2.0.jar')
    implementation files('libs/jpush-android-3.1.2.jar')
}
repositories {
    mavenCentral()
}
